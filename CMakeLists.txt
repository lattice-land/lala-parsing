cmake_minimum_required(VERSION 3.24)

cmake_policy(SET CMP0135 NEW)

if(MSVC)
  set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "Available configuration types to select")
endif()

project(lala-parsing
  HOMEPAGE_URL "https://github.com/lattice-land/lala-parsing"
  LANGUAGES CUDA CXX)
option(LALA_PARSING_BUILD_EXAMPLES "LALA_PARSING_BUILD_EXAMPLES" OFF)
option(LOCAL_DEPS "LOCAL_DEPS" OFF)
option(WITH_XCSP3PARSER "Add support for parsing XCSP3 .xml files" ON)

if(MSVC)
  # XCSP3-CPP-Parser has dependencies on gcc that break MSVC
  set(WITH_XCSP3PARSER OFF)
endif()

if(WITH_XCSP3PARSER)
  set(XCSP3PARSER xcsp3parser)
endif()

# Dependencies

include(FetchContent)

if(LOCAL_DEPS)
  FetchContent_Declare(lala_core SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}/../lala-core/")

  if(WITH_XCSP3PARSER)
    FetchContent_Declare(xcsp3parser SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}/../XCSP3-CPP-Parser/")
  endif()

  FetchContent_Declare(cpp_peglib SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}/../cpp-peglib/")

else()
  FetchContent_Declare(
    lala_core
    GIT_REPOSITORY "https://github.com/lattice-land/lala-core.git"
    GIT_TAG        v1.1.5
  )

  if(WITH_XCSP3PARSER)
    FetchContent_Declare(
      xcsp3parser
      GIT_REPOSITORY    "https://github.com/xcsp3team/XCSP3-CPP-Parser"
      GIT_TAG           50ee7bfa59327c31a0a66ca4072a23cd08d0b182
    )
  endif()

  FetchContent_Declare(
    cpp_peglib
    GIT_REPOSITORY "https://github.com/ptal/cpp-peglib.git"
    GIT_TAG        5637c1f5ca616913f7e3a1d601178977505c784f
  )
endif()

FetchContent_MakeAvailable(lala_core ${XCSP3PARSER} cpp_peglib)

# Preparing the library

add_library(lala_parsing INTERFACE)
target_include_directories(lala_parsing INTERFACE include ${LIBXML2_INCLUDE_DIR})
target_link_libraries(lala_parsing INTERFACE lala_core ${XCSP3PARSER} cpp_peglib)
target_compile_options(lala_parsing INTERFACE
    $<$<AND:$<COMPILE_LANGUAGE:CXX>,$<CXX_COMPILER_ID:MSVC>>:/Zc:__cplusplus /utf-8 /fp:strict>
    "$<$<AND:$<COMPILE_LANGUAGE:CUDA>,$<CUDA_COMPILER_ID:NVIDIA>,$<CXX_COMPILER_ID:MSVC>>:SHELL:--compiler-options /Zc:__cplusplus>"
    "$<$<AND:$<COMPILE_LANGUAGE:CUDA>,$<CUDA_COMPILER_ID:NVIDIA>,$<CXX_COMPILER_ID:MSVC>>:SHELL:--compiler-options /utf-8>"
    "$<$<AND:$<COMPILE_LANGUAGE:CUDA>,$<CUDA_COMPILER_ID:NVIDIA>,$<CXX_COMPILER_ID:MSVC>>:SHELL:--compiler-options /fp:strict>"
)

target_compile_options(lala_parsing INTERFACE
    "$<$<AND:$<COMPILE_LANGUAGE:CUDA>,$<CUDA_COMPILER_ID:NVIDIA>>:SHELL:-diag-suppress 611>"  # Warning generated by the library cpp-peglib.
)

# Example binary

if(LALA_PARSING_BUILD_EXAMPLES)

if(WITH_XCSP3PARSER)
add_executable(example_xcsp3 example/xcsp3/xcsp3.cpp)
target_link_libraries(example_xcsp3 PRIVATE lala_parsing)
endif()

add_executable(example_flatzinc example/flatzinc/flatzinc.cpp)
target_link_libraries(example_flatzinc PRIVATE lala_parsing)

endif()

# Documentation

find_package(Doxygen REQUIRED doxygen)

set(DOXYGEN_PROJECT_NAME "Lattice Land Parsing Library")
set(DOXYGEN_BUILTIN_STL_SUPPORT YES)
set(DOXYGEN_CASE_SENSE_NAMES NO)
set(DOXYGEN_CLASS_DIAGRAMS NO)
set(DOXYGEN_DISTRIBUTE_GROUP_DOC YES)
set(DOXYGEN_EXTRACT_ALL YES)
set(DOXYGEN_EXTRACT_PRIVATE NO)
set(DOXYGEN_FILE_PATTERNS *.hpp)
set(DOXYGEN_GENERATE_TREEVIEW YES)
set(DOXYGEN_HIDE_IN_BODY_DOCS YES)
set(DOXYGEN_QUIET YES)
set(DOXYGEN_RECURSIVE YES)
set(DOXYGEN_SORT_BY_SCOPE_NAME YES)
set(DOXYGEN_SORT_MEMBER_DOCS NO)
set(DOXYGEN_SOURCE_BROWSER NO)
set(DOXYGEN_STRIP_CODE_COMMENTS NO)
set(DOXYGEN_USE_MATHJAX YES)
set(DOXYGEN_EXTRA_PACKAGES stmaryrd)
set(DOXYGEN_EXCLUDE_SYMBOLS = impl)
set(DOXYGEN_ENABLE_PREPROCESSING YES)
set(DOXYGEN_PREDEFINED __NVCC__)
set(DOXYGEN_REFERENCED_BY_RELATION NO)
set(DOXYGEN_REFERENCES_RELATION NO)

doxygen_add_docs(doc_lalaparsing
                 "include/"
                 ALL
                 COMMENT "Generate HTML documentation")
